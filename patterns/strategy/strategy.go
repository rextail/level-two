package strategy

//–ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ —Ä–∞–Ω—Ç–∞–π–º–µ

//–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞–∫–æ–≥–æ-—Ç–æ —É—Å–ª–æ–≤–∏—è.
//–°–æ–≥–ª–∞—Å–Ω–æ –∏–¥–µ–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞, –º—ã —Å–æ–∑–¥–∞–µ–º —Å–µ–º–µ–π—Å—Ç–≤–æ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –±—É–¥–µ—Ç –∏–º–µ—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å,
//–∫–æ—Ç–æ—Ä—ã–π —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –æ–±—â–µ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –¥–æ–±–∏–≤–∞–µ–º—Å—è –≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º–æ—Å—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤.

// –ù–∞–ø—Ä–∏–º–µ—Ä, —É –Ω–∞—Å –µ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂ –≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –∏–≥—Ä–µ:
// –ö–æ–≥–¥–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–¥–æ—Ä–æ–≤—å—è, —É –Ω–µ–≥–æ –æ–±—ã—á–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Ö–æ–¥—å–±—ã.
// –ö–æ–≥–¥–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–æ—Å–∞–∂–∏–≤–∞–µ—Ç—Å—è –ø–æ –∑–¥–æ—Ä–æ–≤—å—é, –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç —Ö—Ä–æ–º–∞—Ç—å, —Å–∫–æ—Ä–æ—Å—Ç—å –º–µ–¥–ª–µ–Ω–Ω–∞—è
// –ö–æ–≥–¥–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–∞–∂–∏–≤–∞–µ—Ç—Å—è –ø–æ –∑–¥–æ—Ä–æ–≤—å—é, –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–æ–ª–∑—Ç–∏, —Å–∫–æ—Ä–æ—Å—Ç—å –æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–∞—è

type Walker interface {
	Walk()
}

type Character struct {
	HP   byte
	Walk Walker //üê∫üê∫üê∫
}

func (c *Character) SetWalker(walker Walker) {
	c.Walk = walker
}

func NewCharacter() *Character {
	return &Character{
		HP: 100,
	}
}

func (c *Character) DoWalk() {
	c.Walk.Walk()
}

//–ü–ª—é—Å—ã:
//1. –õ–µ–≥–∫–∞—è –∑–∞–º–µ–Ω–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Ä–∞–±–æ—Ç—ã –≤ —Ä–∞–Ω—Ç–∞–π–º–µ
//2. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—É OCP

//–ú–∏–Ω—É—Å—ã:
//1. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã —É—Å–ª–æ–∂–Ω—è—é—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É
//2. –ö–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º
